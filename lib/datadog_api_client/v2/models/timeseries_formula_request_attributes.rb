=begin
#Datadog API V2 Collection

#Collection of all Datadog Public endpoints.

The version of the OpenAPI document: 1.0
Contact: support@datadoghq.com
Generated by: https://github.com/DataDog/datadog-api-client-ruby/tree/master/.generator

 Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 This product includes software developed at Datadog (https://www.datadoghq.com/).
 Copyright 2020-Present Datadog, Inc.

=end

require 'date'
require 'time'

module DatadogAPIClient::V2
  # The object describing a timeseries formula request.
  class TimeseriesFormulaRequestAttributes
    include BaseGenericModel

    # Whether the object has unparsed attributes
    # @!visibility private
    attr_accessor :_unparsed

    # List of formulas to be calculated and returned as responses.
    attr_accessor :formulas

    # Start date (inclusive) of the query in milliseconds since the Unix epoch.
    attr_reader :from

    # A time interval in milliseconds.
    # May be overridden by a larger interval if the query would result in
    # too many points for the specified timeframe.
    # Defaults to a reasonable interval for the given timeframe.
    attr_accessor :interval

    # List of queries to be run and used as inputs to the formulas.
    attr_reader :queries

    # End date (exclusive) of the query in milliseconds since the Unix epoch.
    attr_reader :to

    # Attribute mapping from ruby-style variable name to JSON key.
    # @!visibility private
    def self.attribute_map
      {
        :'formulas' => :'formulas',
        :'from' => :'from',
        :'interval' => :'interval',
        :'queries' => :'queries',
        :'to' => :'to'
      }
    end

    # Attribute type mapping.
    # @!visibility private
    def self.openapi_types
      {
        :'formulas' => :'Array<QueryFormula>',
        :'from' => :'Integer',
        :'interval' => :'Integer',
        :'queries' => :'Array<TimeseriesQuery>',
        :'to' => :'Integer'
      }
    end

    # Initializes the object
    # @param attributes [Hash] Model attributes in the form of hash
    # @!visibility private
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (